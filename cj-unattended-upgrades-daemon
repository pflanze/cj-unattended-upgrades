#!/bin/bash

set -euo pipefail
IFS=

mypath=$(readlink -f "$0")
myname=$(basename "$mypath")
mydir=$(dirname "$mypath")
source "$mydir/shared.sh"

print_headers() {
    # excluding body separator (only constant headers)
    echo "From: root"
    echo "To: $notification_email"
}

if [ -e "$spoolfile" ]; then
    # First try to finish / 'rescue' a previous installation run
    spoolfilecontents=$(cat "$spoolfile")
    out=$(mktemp)
    mailfile=$(mktemp)
    (
        set -x
        export DEBIAN_FRONTEND=noninteractive
        apt-get -y --fix-broken -o Dpkg::Options::="--force-confold" install \
            || true
        dpkg --force-confold --configure --pending || true
        apt-get -y --fix-broken -o Dpkg::Options::="--force-confold" install \
            || true
    ) > "$out" 2>&1
    {
        print_headers
        echo "Subject: cj-unattended-upgrades-run: finished/fixed upgrade on boot"
        echo
        echo "The last installation run, from $spoolfilecontents,"
        echo "was interrupted. cj-unattended-upgrades-daemon has"
        echo "tried to finish / fix it up on boot, with the following"
        echo "results:"
        echo
        cat "$out"
    } >> "$mailfile"
    sendmail -t < "$mailfile"
    rm -f "$spoolfile"
fi



no_interrupt() {
    systemd-inhibit --no-pager --who=cj-unattended-upgrades-run --why="currently upgrading the system" -- "$@"
}

echo "$myname started"
trap 'echo "$myname stopped"' 15

errs=0
while true; do
    # Regularly restart mailwatch since it is leaking tons of memory
    # (xfce4-mailwatch-plugin 1.3.0-1). Do this check before possibly
    # generating a mail in the next task, since we can't restart
    # mailwatch if there's a mail in the box.
    "$mydir"/perhaps-kill-mailwatch || true

    out=$(mktemp)
    mailfile=$(mktemp)
    if no_interrupt "$mydir"/cj-unattended-upgrades-run > "$out" 2>&1; then
        if [ -s "$out" ]; then
            {
                print_headers
                cat "$out"
            } >> "$mailfile"
        fi
        # Otherwise stay silent.
    else
        errs=1
        {
            print_headers
            echo 'Subject: cj-unattended-upgrades-run has failed!'
            echo
            echo "This is a serious failure and indicates a bug."
            echo
            echo "The error(s):"
            echo
            cat "$out"
        } >> "$mailfile"
    fi
    if [ -s "$mailfile" ]; then
        sendmail -t < "$mailfile"
    fi
    rm -f "$mailfile" "$out"

    if [ "$errs" -ne 0 ]; then
        echo "Exiting daemon due to serious error(s)."
        exit 1
    fi

    # Do not add --quiet flag right now, to allow for debugging
    sleep-random "${CJ_UNATTENDED_UPGRADES_SLEEPTIME-4h}"
    echo wake-up
done
