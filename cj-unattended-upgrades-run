#!/bin/bash

set -euo pipefail
IFS=

#mypath=$(readlink -f "$0")
# No, only cj-unattended-upgrades is meant to be symlinked
myname=cj-unattended-upgrades
mydir=$(dirname "$0")
source "$mydir/shared.sh"

dry_or_y=
if [ "${CJ_UNATTENDED_UPGRADES_DRY_RUN-}" = 1 ]; then
    dry_or_y=--dry-run
else
    dry_or_y=-y
fi

updatetmp=
upgradetmp=
lsoftmp=

perhaps_showfile () {
    local filekind
    local perhaps_filepath
    filekind="$1"
    perhaps_filepath="$2"
    if [ -n "$perhaps_filepath" ]; then
        echo "/==== $filekind: ============================================\\"
        cat "$perhaps_filepath"
        echo "\\============================================================/"
        echo
    fi
}

die () {
    echo "Subject: $myname failure: $*"
    echo
    perhaps_showfile "update output" "$updatetmp"
    perhaps_showfile "upgrade output" "$upgradetmp"
    perhaps_showfile "processes holding old file versions open" "$lsoftmp"
    rm -f "$spoolfile"
    exit 0 # OK?
}

date > "$spoolfile"

cj-aptclean

updatetmp=$(mktemp)

# apt-get -q=2 update > "$updtmp" 2>&1
apt-get update \
        > "$updatetmp" 2>&1 || die "apt-get update failed"

upgradetmp=$(mktemp)

export DEBIAN_FRONTEND=noninteractive
apt-get dist-upgrade "$dry_or_y" -o Dpkg::Options::="--force-confold" \
        > "$upgradetmp" 2>&1 || die "apt-get dist-upgrade failed"

# Were there upgrades?  If so, say so.  Otherwise, say nothing.

if numdone=$(perl -wne '
    BEGIN { $z = 0; $saw = 0; }
    if (my ($n, $m) = /^(\d+) upgraded, (\d+) newly installed/) { $z += $n + $m; $saw++ } 
    END {
        if ($saw == 1) {
            print $z or die $!
        } elsif ($saw) {
            die "more than one match in given file"
        } else {
            die "no match in given file"
        }
    }
' < "$upgradetmp"); then

    if [ "$numdone" -gt 0 ]; then
        if [ "$numdone" -eq 1 ]; then
            packageS=package
        else
            packageS=packages
        fi
        echo "Subject: $myname: $numdone $packageS upgraded/installed"
        echo
        perhaps_showfile "update output" "$updatetmp"
        perhaps_showfile "upgrade output" "$upgradetmp"
        need-reboot --set 1
        lsoftmp=$(mktemp)
        lsof-deleted > "$lsoftmp" 2>/dev/null
        perhaps_showfile "processes holding old file versions open" "$lsoftmp"
    fi

else
    echo
    echo "File contents:"
    echo
    cat "$upgradetmp"
fi

#rm -f "$updatetmp" "$upgradetmp"
rm -f "$spoolfile"
